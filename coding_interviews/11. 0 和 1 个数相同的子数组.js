// [TOPIC]: 给定一个二进制数组 nums , 找到含有相同数量的 0 和 1 的最长连续子数组，并返回该子数组的长度。

/**
 * @param {number[]} nums
 * @return {number}
 */
 var findMaxLength = function(nums) {
    // 求的是相同数量，对于两个数相同情况下 异或为0，不同为1
};

// 输入: nums = [0,1]
// 输出: 2
// 说明: [0, 1] 是具有相同数量 0 和 1 的最长连续子数组。

// 输入: nums = [0,1,0]
// 输出: 2
// 说明: [0, 1] (或 [1, 0]) 是具有相同数量 0 和 1 的最长连续子数组。

// 1 <= nums.length <= 105
// nums[i] 不是 0 就是 1